openapi: 3.0.1
info:
  title: Ecommecer docs APIs
  # description: NS Checkin system REST API
  # termsOfService: http://swagger.io/terms/
  # contact:
  #   name: Hyperledger Team
  # license:
  #   name: Apache 2.0
  #   url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: http://192.168.1.21:8345
  - url: http://localhost:9999
paths:
  /api/auth/login:
    post:
      tags:
        - authenticate
      summary: login
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/user"
            example:
              "EMAIL": ""
              "PASSWORD": ""
      responses:
        "200":
          description: Success
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: UnAuthorized
          content: {}
        "404":
          description: Not found
          content: {}
    security:
      - JWT: []
  /api/auth/registerUser:
    post:
      tags:
        - auth
      summary: create account
      operationId: create account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/user"
            example:
              "EMAIL": "dxhai.20it11@vku.udn.vn"

      responses:
        "200":
          description: Success
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: UnAuthorized
          content: {}
        "404":
          description: Not found
          content: {}
      security:
        - JWT: []
  /api/auth/registerUser/verifyOtp:
    post:
      tags:
        - auth
      summary: verify account
      operationId: verify account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/user"
            example:
              "EMAIL": ""
              "OTP": ""

      responses:
        "200":
          description: Success
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: UnAuthorized
          content: {}
        "404":
          description: Not found
          content: {}
      security:
        - JWT: []
  /api/auth/refreshToken:
    post:
      tags:
        - auth
      summary: refeshToken
      operationId: refeshToken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/user"
            example:
              "refeshToken": ""

      responses:
        "200":
          description: Success
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: UnAuthorized
          content: {}
        "404":
          description: Not found
          content: {}
  /api/auth/changePassword:
    post:
      tags:
        - auth
      summary: change password
      operationId: change password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/user"
            example:
              "oldPassword": "aaaa"
              "newPassword": "adadasdad"
              "reNewPassword": "adadasdad"

      responses:
        "200":
          description: Success
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: UnAuthorized
          content: {}
        "404":
          description: Not found
          content: {}
  /api/menu/createMenu:
    post:
      tags:
        - menu
      summary: create menu
      operationId: create menu
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/menu"
            example:
              "TITLE": "aaaa"
              "PARENT_ID": ""

      responses:
        "200":
          description: Success
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: UnAuthorized
          content: {}
        "404":
          description: Not found
          content: {}
      security:
        - JWT: []
  /api/menu/getAllMenu:
    get:
      tags:
        - menu
      summary: get all menu
      operationId: get all menu
      responses:
        "200":
          description: Success
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: UnAuthorized
          content: {}
        "404":
          description: Not found
          content: {}
      security:
        - JWT: []
  /api/menu/getMenuId/{menuId}:
    get:
      tags:
        - menu
      summary: get all menu
      operationId: get all menu
      parameters:
        - name: menuId
          in: path
          description: Please provide menuId
          required: true
          schema:
            type: string
            example: "1"
      responses:
        "200":
          description: Success
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: UnAuthorized
          content: {}
        "404":
          description: Not found
          content: {}
      security:
        - JWT: []
  /api/menu/updateMenu/{menuId}:
    patch:
      tags:
        - menu
      summary: update menu
      operationId: update menu
      parameters:
        - name: menuId
          in: path
          description: Please provide menuId
          required: true
          schema:
            type: string
            example: "1"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/menu"
            example:
              "TITLE": "aaaa"
              "PARENT_ID": ""

      responses:
        "200":
          description: Success
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: UnAuthorized
          content: {}
        "404":
          description: Not found
          content: {}
      security:
        - JWT: []
  /api/menu/deleteMenu/{menuId}:
    delete:
      tags:
        - menu
      summary: delete menu
      operationId: delete menu
      parameters:
        - name: menuId
          in: path
          description: Please provide menuId
          required: true
          schema:
            type: string
            example: "1"
      responses:
        "200":
          description: Success
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: UnAuthorized
          content: {}
        "404":
          description: Not found
          content: {}
      security:
        - JWT: []

  /api/gameCard/createGameCard:
    post:
      tags:
        - game card
      summary: create game card
      operationId: create game card
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                CONTENT:
                  type: string
                TYPE_CARD:
                  type: string
              required:
                - image
                - CONTENT
                - TYPE_CARD
            example:
              pdfFile: [binary-data]
      responses:
        "200":
          description: Success
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: UnAuthorized
          content: {}
        "404":
          description: Not found
          content: {}
      security:
        - JWT: []
  /api/gameCard/getAllGameCard:
    get:
      tags:
        - game card
      summary: get gameCard
      operationId: get gameCard
      responses:
        "200":
          description: Success
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: UnAuthorized
          content: {}
        "404":
          description: Not found
          content: {}
      security:
        - JWT: []
  /api/gameCard/getGameCardId/{gameCardId}:
    get:
      tags:
        - game card
      summary: get gameCard id
      operationId: get gameCard id
      parameters:
        - name: gameCardId
          in: path
          description: Please provide gameCard id
          required: true
          schema:
            type: string
            example: "1"
      responses:
        "200":
          description: Success
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: UnAuthorized
          content: {}
        "404":
          description: Not found
          content: {}
      security:
        - JWT: []
  /api/gameCard/updateGameCard/{gameCardId}:
    patch:
      tags:
        - game card
      summary: update game card
      operationId: update game card
      parameters:
        - name: gameCardId
          in: path
          description: Please provide gameCard id
          required: true
          schema:
            type: string
            example: "1"
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                CONTENT:
                  type: string
                TYPE_CARD:
                  type: string
            example:
              pdfFile: [binary-data]
      responses:
        "200":
          description: Success
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: UnAuthorized
          content: {}
        "404":
          description: Not found
          content: {}
      security:
        - JWT: []
  /api/gameCard/deleteGameCard/{gameCardId}:
    delete:
      tags:
        - game card
      summary: delete gameCard id
      operationId: delete gameCard id
      parameters:
        - name: gameCardId
          in: path
          description: Please provide gameCard id
          required: true
          schema:
            type: string
            example: "1"
      responses:
        "200":
          description: Success
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: UnAuthorized
          content: {}
        "404":
          description: Not found
          content: {}
      security:
        - JWT: []

components:
  schemas:
  securitySchemes:
    JWT:
      type: apiKey
      in: header
      name: Authorization
